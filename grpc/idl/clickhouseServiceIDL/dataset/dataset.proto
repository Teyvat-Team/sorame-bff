syntax = "proto3";

package dataset;

import "base.proto";

service DataSet {
  rpc List(DataSetListRequest) returns (DataSetListResponse) {}
}

enum OrderBy {
  createTime = 0;
}

enum Order {
  asc = 0;
  desc = 1;
}

message DataSetListRequest {
  string createUser = 1;
  /*
   * @default = createTime
   */
  optional OrderBy orderBy = 2;
  /*
   * @default = desc
   */
  optional Order order= 3;
  /**
   * when page and pageSize are not set, it will return all data sets
   */
  optional int32 page = 4;
  optional int32 pageSize = 5;
  /** filter for serarching dataset name */
  optional string keyword = 6;
}

message DataSetListResponse {
  // 所有数据集
  repeated DataSetListResponseData data = 1;
  base.BaseResp baseResp = 255;
}

// 单个数据集
message DataSetListResponseData {
  // 一个数据集下的所有的表，数组长度为表的个数
  repeated DataSetList dataSetList = 1;
  // 数据集总数
  int64 totalCount = 2;
}

// 数据集下的单张表
message DataSetList {
  // 1-6 是数据集的字段，而不是表的字段
  /** dataset createTime, timestamp in ms*/
  string createTime = 1;
  /** dataset name*/
  string name = 2;
  /** dataset description*/
  string descr = 3;
  /** dataset source type*/
  string dataSourceType = 4;
  /** dataset id 数据集id */
  string id = 5;
  /** dataset createUser*/
  string createUser = 6;
  // 7-9 是表的字段
  /** database name from where the table created*/
  string dbName = 7;
  /** table name*/
  string tableName = 8;
   /** table id*/
  string tableId = 9;
  /** table schema*/
  repeated Schema schema = 10;
}

message Schema {
  string name = 1;
  string type = 2;
  string descr = 3;
  bool isPartition = 4;
}
